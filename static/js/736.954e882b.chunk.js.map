{"version":3,"file":"static/js/736.954e882b.chunk.js","mappings":"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","sources":["components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx","servises/api.js"],"sourcesContent":["import styled from \"styled-components\";\n\nexport const Wrapper = styled.div`\n    margin-top: 30px;\n    padding-right: 80px;\n    padding-left: 80px;\n    padding-bottom: 40px;\n`;\n\nexport const CastHeader = styled.h3`\n    font-size: 25px;\n    font-weight: 500;\n    text-align: center;\n`;\n\nexport const CastList = styled.ul`\n    margin-top: 30px;\n    display: flex;\n    align-items: center;\n    gap: 40px;\n    flex-wrap: wrap;\n`;\n\nexport const CastListItem = styled.li`\n    width: calc((100% - 4 * 40px) / 5);\n    height: 400px;\n    word-wrap: break-word;\n`;\n\nexport const CastInfo = styled.div`\n    margin-top: 20px;\n    max-width: 220px;\n`;\n\nexport const CastName = styled.h3`\n    margin-bottom: 10px;\n`;\n\nexport const NoCastText = styled.p`\n    margin: 30px auto 0 auto;\n    text-align: center;\n    padding: 20px;\n    background-color: #f8f8f8;\n    border-radius: 6px;\n    box-shadow: 0 0 5px rgba(0, 0, 0, 0.2);\n    max-width: 500px;\n`;","import { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { fetchMovieCast } from \"servises/api\";\nimport { CastHeader, CastInfo, CastList, CastListItem, CastName, NoCastText, Wrapper } from \"./Cast.styled\";\n\n\nconst Cast = () => {\n    const { movieId } = useParams();\n    const [cast, setCast] = useState([]);\n\n    useEffect(() => {\n        const fetchCast = async () => {\n            try {\n                const { cast } = await fetchMovieCast(movieId);\n                setCast(cast);\n            } catch (error) {\n                console.log(error);\n            }\n        };\n\n        fetchCast();\n    }, [movieId]);\n\n    return (\n        <Wrapper>\n            <CastHeader>Cast</CastHeader>\n\n            {cast.length ? (\n                <CastList>\n                    {cast.map(actor => (\n                        <CastListItem key={actor.id}>\n\n                            {actor.profile_path ? (\n                                <img\n                                    src={`https://image.tmdb.org/t/p/w200${actor.profile_path}`}\n                                    alt={`${actor.name} profile`}\n                                />\n                            ) : (\n                                <img\n                                    src={`https://via.placeholder.com/200x300?text=No+Image`}\n                                    alt={`${actor.name} profile`}\n                                />\n                            )}\n                            \n                            <CastInfo>\n                                <CastName>{actor.name}</CastName>\n                                <p>Character: {actor.character}</p>\n                            </CastInfo>\n                        </CastListItem>\n                    ))}\n                </CastList>\n            ) : (\n                <NoCastText>\n                    We don't have any information about the cast yet.\n                </NoCastText>\n            )}\n        </Wrapper>\n    );\n};\n\nexport default Cast;","import axios from \"axios\";\n\nconst baseURL = 'https://api.themoviedb.org';\nconst API_KEY = 'bd6023ae3d7655a9ba206f8d576c79ae';\n\nexport const fetchTrendMovies = async () => {\n    const { data } = await axios.get(`${baseURL}/3/trending/movie/day?api_key=${API_KEY}`);\n\n    return data;\n};\n\nexport const fetchMovieByName = async query => {\n    const { data } = await axios.get(\n        `${baseURL}/3/search/movie?api_key=${API_KEY}&language=en-US&query=${query}&page=1&include_adult=false`\n    );\n\n    return data;\n};\n\nexport const fetchMovieById = async movieId => {\n    const { data } = await axios.get(\n        `${baseURL}/3/movie/${movieId}?api_key=${API_KEY}&language=en-US`\n    );\n\n    return data;\n};\n\n\nexport const fetchMovieCast = async movieId => {\n    const { data } = await axios.get(\n        `${baseURL}/3/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`\n    );\n\n    return data;\n};\n\nexport const fetchMovieReviews = async movieId => {\n    const { data } = await axios.get(\n        `${baseURL}/3/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`\n    );\n\n    return data;\n};"],"names":["Wrapper","styled","_templateObject","_taggedTemplateLiteral","CastHeader","_templateObject2","CastList","_templateObject3","CastListItem","_templateObject4","CastInfo","_templateObject5","CastName","_templateObject6","NoCastText","_templateObject7","movieId","useParams","_useState","useState","_useState2","_slicedToArray","cast","setCast","useEffect","fetchCast","_ref","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$fetchMovieCast","_cast","_context","prev","next","fetchMovieCast","sent","t0","console","log","stop","apply","arguments","_jsxs","children","_jsx","length","map","actor","profile_path","src","concat","alt","name","character","id","baseURL","API_KEY","fetchTrendMovies","_yield$axios$get","data","axios","abrupt","fetchMovieByName","_ref2","_callee2","query","_yield$axios$get2","_context2","_x","fetchMovieById","_ref3","_callee3","_yield$axios$get3","_context3","_x2","_ref4","_callee4","_yield$axios$get4","_context4","_x3","fetchMovieReviews","_ref5","_callee5","_yield$axios$get5","_context5","_x4"],"sourceRoot":""}